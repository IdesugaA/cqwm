<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.own.mapper.OrderMapper">

    <insert id="insert" parameterType="Orders" useGeneratedKeys="true" keyProperty="id">
        insert into orders
        (number, status, user_id, address_book_id, order_time, checkout_time, pay_method, pay_status, amount,
        remark, phone, address, consignee, estimated_delivery_time, delivery_status, pack_amount, tableware_number,
         tableware_status)
        values (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{payMethod},
                #{payStatus}, #{amount}, #{remark}, #{phone}, #{address}, #{consignee},
                #{estimatedDeliveryTime}, #{deliveryStatus}, #{packAmount}, #{tablewareNumber}, #{tablewareStatus})
    </insert>

    <update id="update" parameterType="com.own.entity.Orders">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason!='' ">
                cancel_reason=#{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason!='' ">
                rejection_reason=#{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status=#{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method=#{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime}
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateStatus">
        update orders
        <set>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="msg!=null and msg!=''">
                cancel_reason = #{msg},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
        </set>
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <update id="updateDeliveryStatus">
        update orders
        <set>
            <if test="status!=null">
                status = #{status},
            </if>
            <if test="deliveryTime!=null">
                delivery_time = #{deliveryTime},
            </if>
        </set>
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <select id="findByCondition" resultType="com.own.entity.Orders"
            parameterType="com.own.dto.OrdersPageQueryDTO">
        select * from orders
        <where>
            <if test="status != null">
                status = #{status}
            </if>
        </where>
        order by order_time desc
    </select>

    <sql id="orderSql">
        <where>
            <if test="status!=null">
                status = #{status}
            </if>
            <if test="beginTime!=null">
                and order_time >= #{beginTime}
            </if>
            <if test="endTime!=null">
                and order_time <= #{endTime}
            </if>
        </where>
    </sql>

    <select id="sumByMap" resultType="java.lang.Double">
        select sum(count) from orders
        <include refid="orderSql"></include>
    </select>

    <select id="countByMap" resultType="java.lang.Integer">
        select count(*) from orders
        <include refid="orderSql"></include>
    </select>
    <select id="getSalesTop10" resultType="com.own.dto.GoodsSalesDTO">
        select od.name,sum(od.number) number from orders o
        inner join order_detail od on o.id = od.order_id
        where o.status = 5
        <if test="beginTime != null">
            and o.order_time >= #{beginTime}
        </if>
        <if test="endTime!=null">
            and o.order_time<=#{endTime}
        </if>
        group by od.name
        order by number desc
    </select>

</mapper>