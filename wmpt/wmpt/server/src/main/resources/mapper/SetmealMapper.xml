<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.own.mapper.SetmealMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into setmeal
        (category_id, name, price, status, description, image, create_time, update_time, create_user, update_user)
        values (#{categoryId}, #{name}, #{price}, #{status}, #{description}, #{image}, #{createTime}, #{updateTime},
                #createUser, #{updateUser})
    </insert>

    <update id="update" parameterType="com.own.entity.Setmeal">
        update setmeal
        <set>
            <if test="categoryId != null">
                category_id = #{categoryId},
            </if>
            <if test="name!=null and name!= ''">
                name = #{name},
            </if>
            <if test="price!=null">
                price = #{price},
            </if>
            <if test="status!=null">
                status = #{status},
            </if>
            <if test="description!=null and description!=''">
                description = #{description},
            </if>
            <if test="image!=null and image!=''">
                image = #{image},
            </if>
            <if test="updateTime!=null">
                update_time = #{updateTime}
            </if>
            <if test="updateUser!=null">
                update_user = #{updateUser},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="pageQuery" resultType="com.own.vo.SetmealVO">
        select
        s.*,c.name categoryName
        from setmeal s
        left join
        category c
        on
        s.category_id = c.id
        <where>
            <if test="name!=null">
                and s.name like concat('%',#{name},'%')
            </if>
            <if test="status != null">
                and s.status = #{status}
            </if>
            <if test="categoryId != null">
                and s.category_id = #{categoryId}
            </if>
        </where>
        order by s.create_time desc
    </select>

    <select id="list" resultType="com.own.entity.Setmeal" parameterType="com.own.entity.Setmeal">
        select * from setmeal
        <where>
            <if test="name != null">
                and name like concat('%',#{name},'%')
            </if>
            <if test="categoryId != null">
                and category_id = #{categoryId}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>

    <!--在mybatis中多表映射封装type=com.sky.vo.SetmealVO的主键id必须手动映射，其他属性名与数据库字段名不一样才手动映射-->
    <resultMap id="setmeal" type="com.own.vo.SetmealVO" autoMapping="true">
        <result column="id" property="id"/>
        <collection property="setmealDishes" ofType="SetmealDish" javaType="List" autoMapping="true">
            <result column="sd_id" property="id"/>
            <result column="sd_name" property="name"/>
            <result column="sd_price" property="price"/>
        </collection>
    </resultMap>

    <!--
问题1：b.id    sd_id 这里的id为什么起别名？
  答：在mybatis框架映射封装数据给实体类的时候不允许出现数据库字段名字一样，否则无法正确封装，所以相同字段必须起别名避免冲突
问题2：这里为什么不可以使用resultType="com.sky.vo.SetmealVO"？
  答：因为里面的List<SetmealDish>不属于基础类型，不可以直接映射封装，像这样实体类类型的数据必须使用 resultMap 自定义封装
问题3：实体类属性封装规则是什么？
A,B,C都是实体类
class A{
    //基础类型属性省略，可以直接映射

    //下面实体类属性不可以i直接映射
    private B b;  //A与B在这里是 1:1 关系
    private List<C> cList; //A与C在这里是 1:多 关系
}
<resultMap type="com.sky.vo.SetmealVO">
   基本属性直接映射
   1对1的映射 <association property="b" javaType="B" autoMapping="true">
   1对多的映射 <collection property="clist" ofType="C" javaType="List" autoMapping="true">
</resultMap>
//autoMapping="true" 实体类属性名与数据库字段名一样直接封装，不一样的需要手动映射


-->

    <select id="getByIdWithDish" parameterType="long" resultMap="setmealAndDishMap">
        select a.*,
               b.id sd_id,
               b.setmeal_id,
               b.dish_id,
               b.name sd_name,
               b.price sd_price,
               b.copies
        from setmeal a
                left join
             setmeal_dish b
             on
                 a.id = b.setmeal_id
        where a.id = #{id}
    </select>

    <select id="countByMap" resultType="java.lang.Integer">
        select count(id) from setmeal
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="categoryId != null">
                and category_id = #{categoryId}
            </if>
        </where>
    </select>

</mapper>